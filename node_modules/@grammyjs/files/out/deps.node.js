"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.downloadFile = exports.copyFile = exports.createTempFile = exports.isAbsolutePath = exports.Context = exports.Api = void 0;
const path = require("path");
const fs = require("fs");
const os = require("os");
const https = require("https");
var grammy_1 = require("grammy");
Object.defineProperty(exports, "Api", { enumerable: true, get: function () { return grammy_1.Api; } });
Object.defineProperty(exports, "Context", { enumerable: true, get: function () { return grammy_1.Context; } });
// Determine whether a file path is absolute
var path_1 = require("path");
Object.defineProperty(exports, "isAbsolutePath", { enumerable: true, get: function () { return path_1.isAbsolute; } });
// Create a temporary file
const createTempFile = async () => path.join(await fs.promises.mkdtemp((await fs.promises.realpath(os.tmpdir())) + path.sep), "filedata");
exports.createTempFile = createTempFile;
// Copy a local file to a file path
exports.copyFile = fs.promises.copyFile;
// Copy a file from a URL to a file path
function downloadFile(url, dest) {
    const file = fs.createWriteStream(dest);
    return new Promise((resolve, reject) => {
        https.get(url, (res) => {
            res.pipe(file);
            file.on("finish", () => {
                file.close();
                resolve();
            });
        }).on("error", (err0) => fs.unlink(dest, (err1) => reject(err1 ? err1 : err0)));
    });
}
exports.downloadFile = downloadFile;
